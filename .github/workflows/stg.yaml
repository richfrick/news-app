name: PR deploy & test (Staging)
run-name: ${{ github.actor }} is deploying to Production ðŸš€

on:
    pull_request:
        types: [opened, synchronize]

jobs:
    test:
        name: Test Execution
        runs-on: ubuntu-latest
        steps:
            - name: checkout repo
              uses: actions/checkout@v3

            - name: Use Node.js
              uses: actions/setup-node@v2

            - name: Use PostgresSQL
              uses: harmon758/postgresql-action@v1
              with:
                  postgresql db: "nc_news_test"
                  postgresql user: "test_user"
                  postgresql password: "password"

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: PGDATABASE=nc_news_test PGUSER=test_user PGPASSWORD=password npm t

    deploy:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Check if SERVICE ID exists exists
              run: echo "SERVICE ID is set"
              env:
                  MY_SECRET: ${{ secrets.RENDER_SERVICE_ID_STAGING }}

            - name: Check if API KEY exists exists
              run: echo "API KEY is set"
              env:
                  MY_SECRET: ${{ secrets.RENDER_API_KEY }}

            - name: Deploy to staging
              uses: johnbeynon/render-deploy-action@v0.0.8
              with:
                  service-id: ${{ secrets.RENDER_SERVICE_ID_STAGING }}
                  api-key: ${{ secrets.RENDER_API_KEY }}
