name: PR deploy & test (Staging)
run-name: ${{ github.actor }} is deploying to Staging ðŸš€

on:
    pull_request:
        types: [opened, synchronize, reopened]

jobs:
    test:
        name: Test Execution
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Use Node.js
              uses: actions/setup-node@v2

            - name: Use PostgreSQL
              uses: harmon758/postgresql-action@v1
              with:
                  postgresql db: "nc_news_test"
                  postgresql user: "test_user"
                  postgresql password: "password"

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: PGDATABASE=nc_news_test PGUSER=test_user PGPASSWORD=password npm t

    deploy:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Set PR branch variable
              run: echo "PR_BRANCH=${GITHUB_HEAD_REF}" >> $GITHUB_ENV

            - name: Update Render staging branch
              run: |
                  echo "Updating Render staging service to use branch: $PR_BRANCH"
                  curl -X PATCH \
                    -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
                    -H "Content-Type: application/json" \
                    -d "{\"branch\": \"${PR_BRANCH}\"}" \
                    https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_STAGING }}

            - name: Verify Render branch setting
              run: |
                  echo "Fetching Render service info..."
                  curl -s -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
                    https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_STAGING }} \
                    | jq '.branch'

            - name: Deploy to staging
              uses: johnbeynon/render-deploy-action@v0.0.8
              with:
                  service-id: ${{ secrets.RENDER_SERVICE_ID_STAGING }}
                  api-key: ${{ secrets.RENDER_API_KEY }}
